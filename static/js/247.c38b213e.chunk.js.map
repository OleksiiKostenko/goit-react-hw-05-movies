{"version":3,"file":"static/js/247.c38b213e.chunk.js","mappings":"8LAqCA,UAjCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAS,UACf,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAyBP,EAASE,GAAQM,MAAK,SAAAJ,GAAI,OAAIC,EAAQD,EAAKK,KAAjB,GACpD,GAAE,CAACT,EAASE,KAGX,yBACmB,IAAhBE,EAAKM,QACJ,kEAEA,wBACGN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,0BACGD,IACC,gBACEE,IAAG,0CAAqCF,GACxCG,IAAKL,KAGT,uBAAIA,KACJ,uBAAIC,MARGE,EADD,OAgBnB,C,uKCjCKG,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzC,cAEGG,EAFH,yBAKIA,EAASlB,KAAKmB,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCQ,IAHpD,cAEGL,EAFH,yBAKIA,EAASlB,KAAKmB,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEoBM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,IAHlC,cAEGG,EAFH,yBAKIA,EAASlB,MALb,gCAOHoB,QAAQC,MAAR,MAPG,gFAWA,SAAelB,EAAtB,iDAAO,OAAP,oBAAO,WAAwCQ,EAAIb,GAA5C,gGAEoBmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,YACMb,EADN,oBACwBiB,IAH5C,cAEGG,EAFH,yBAKIA,EAASlB,MALb,gCAOHoB,QAAQC,MAAR,MAPG,gF","sources":["components/Cast/Cast.jsx","service/getRequest.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieForIdAndParams } from 'service/getRequest';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const params = 'credits';\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchMovieForIdAndParams(movieId, params).then(data => setData(data.cast));\n  }, [movieId, params]);\n\n  return (\n    <div>\n      {data.length === 0 ? (\n        <p>We don't have any cast for this movie</p>\n      ) : (\n        <ul>\n          {data.map(({ name, character, profile_path, id }) => (\n            <li key={id}>\n              {profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w185/${profile_path}`}\n                  alt={name}\n                />\n              )}\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '42ab61f5920475fba7f6e6af12ec3589';\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesForRequest(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForIdAndParams(id, params) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/${params}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","params","useState","data","setData","useEffect","fetchMovieForIdAndParams","then","cast","length","map","name","character","profile_path","id","src","alt","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","error","fetchMoviesForRequest","query","fetchMovieForId"],"sourceRoot":""}