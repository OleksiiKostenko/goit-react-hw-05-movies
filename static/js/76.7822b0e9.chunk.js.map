{"version":3,"file":"static/js/76.7822b0e9.chunk.js","mappings":"yNACA,EAA6B,yBAA7B,EAAkE,wBAAlE,EAAsG,wBAAtG,EAAyI,uBAAzI,EAA4K,wBAA5K,EAA0M,kBAA1M,EAA8O,8BAA9O,EAAmR,mBAAnR,EAA8S,oB,iBC6C9S,MAxCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAS,UACf,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAyBP,EAASE,GAAQM,MAAK,SAAAJ,GAAI,OAAIC,EAAQD,EAAKK,KAAjB,GACpD,GAAE,CAACT,EAASE,IACbQ,QAAQC,IAAI,cAAeP,IAEzB,gBAAKQ,UAAWC,EAAhB,SACmB,IAAhBT,EAAKU,QACJ,cAAGF,UAAWC,EAAd,oDAIA,eAAID,UAAWC,EAAf,SACGT,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,gBAAIP,UAAWC,EAAf,UACoB,OAAjBK,GACC,gBAAKN,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAASO,IAAKC,EAAKC,IAAI,QAGzC,gBACEV,UAAWC,EACXO,IAAG,0CAAqCF,GACxCI,IAAKN,KAGT,eAAIJ,UAAWC,EAAf,SAA2BG,KAC3B,cAAGJ,UAAWC,EAAd,SAAyBI,MAbQE,EAD3B,OAqBnB,C,uKC1CKI,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzC,cAEGG,EAFH,yBAKIA,EAASvB,KAAKwB,SALlB,gCAOHlB,QAAQmB,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,gGAEoBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,IAHpD,cAEGJ,EAFH,yBAKIA,EAASvB,KAAKwB,SALlB,gCAOHlB,QAAQmB,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEoBO,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAJ,EADA,oBACcK,IAHlC,cAEGG,EAFH,yBAKIA,EAASvB,MALb,gCAOHM,QAAQmB,MAAR,MAPG,gFAWA,SAAetB,EAAtB,iDAAO,OAAP,oBAAO,WAAwCY,EAAIjB,GAA5C,gGAEoBwB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAJ,EADA,YACMjB,EADN,oBACwBsB,IAH5C,cAEGG,EAFH,yBAKIA,EAASvB,MALb,gCAOHM,QAAQmB,MAAR,MAPG,gF","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","service/getRequest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_wrapp\":\"Cast_cast_wrapp__fUtns\",\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\",\"cast_img\":\"Cast_cast_img__fJUn3\",\"img_block\":\"Cast_img_block__3ZlVI\",\"img\":\"Cast_img__-isbW\",\"text_not__found\":\"Cast_text_not__found__KYhOJ\",\"text\":\"Cast_text__P2vgu\",\"title\":\"Cast_title__0cH9s\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieForIdAndParams } from 'service/getRequest';\nimport css from './Cast.module.css';\nimport img from 'no_photo.jpg';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const params = 'credits';\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchMovieForIdAndParams(movieId, params).then(data => setData(data.cast));\n  }, [movieId, params]);\n  console.log('object :>> ', data);\n  return (\n    <div className={css.cast_wrapp}>\n      {data.length === 0 ? (\n        <p className={css.text_not__found}>\n          We don't have any cast for this movie\n        </p>\n      ) : (\n        <ul className={css.cast_list}>\n          {data.map(({ name, character, profile_path, id }) => (\n            <li className={css.cast_item} key={id}>\n              {profile_path === null ? (\n                <div className={css.img_block}>\n                  <img className={css.img} src={img} alt=\"\" />\n                </div>\n              ) : (\n                <img\n                  className={css.cast_img}\n                  src={`https://image.tmdb.org/t/p/w185/${profile_path}`}\n                  alt={name}\n                />\n              )}\n              <h3 className={css.title}>{name}</h3>\n              <p className={css.text}>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '42ab61f5920475fba7f6e6af12ec3589';\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesForRequest(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForIdAndParams(id, params) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/${params}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","params","useState","data","setData","useEffect","fetchMovieForIdAndParams","then","cast","console","log","className","css","length","map","name","character","profile_path","id","src","img","alt","BASE_URL","API_KEY","fetchTrending","axios","response","results","error","fetchMoviesForRequest","query","fetchMovieForId"],"sourceRoot":""}