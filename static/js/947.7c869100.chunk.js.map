{"version":3,"file":"static/js/947.7c869100.chunk.js","mappings":"sMA+DA,UArDA,WAAyB,IAAD,IACdA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAExDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBZ,GAASa,MAAK,SAAAV,GAAI,OAAIC,EAAQD,EAAZ,GACnC,GAAE,CAACH,IAEJ,IAAQc,EACNX,EADMW,YAAaC,EACnBZ,EADmBY,MAAOC,EAC1Bb,EAD0Ba,aAAcC,EACxCd,EADwCc,aAAcC,EACtDf,EADsDe,SAAUC,EAChEhB,EADgEgB,OAGlE,OACE,4BACE,SAAC,KAAD,CAASC,GAAIb,EAAiBc,QAA9B,qBACCH,IACC,2BACIJ,GAGA,gBACEQ,IAAG,0CAAqCR,GACxCS,IAAKR,KAJP,4CAOF,0BACGA,EADH,IACWC,EAAaQ,MAAM,EAAG,GADjC,QAGA,wCAA+B,GAAfP,GAAmBQ,UAAY,QAC/C,uCACA,uBAAIP,KACJ,mCACmB,IAAlBC,EAAOO,QACN,4CAEA,wBACGP,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,OAKhB,SAAC,KAAD,CAAMR,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C,uKC3DKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzC,cAEGG,EAFH,yBAKIA,EAASjC,KAAKkC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCQ,IAHpD,cAEGL,EAFH,yBAKIA,EAASjC,KAAKkC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BgB,GAA/B,gGAEoBO,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAJ,EADA,oBACcK,IAHlC,cAEGG,EAFH,yBAKIA,EAASjC,MALb,gCAOHmC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAAwCd,EAAIe,GAA5C,gGAEoBR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAJ,EADA,YACMe,EADN,oBACwBV,IAH5C,cAEGG,EAFH,yBAKIA,EAASjC,MALb,gCAOHmC,QAAQC,MAAR,MAPG,gF","sources":["components/MovieDetails/MovieDetails.jsx","service/getRequest.js"],"sourcesContent":["import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieForId } from 'service/getRequest';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetchMovieForId(movieId).then(data => setData(data));\n  }, [movieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    data;\n\n  return (\n    <div>\n      <NavLink to={backLinkLocation.current}>Go back</NavLink>\n      {overview && (\n        <div>\n          {!poster_path ? (\n            <p>Not have Poster</p>\n          ) : (\n            <img\n              src={`https://image.tmdb.org/t/p/w342/${poster_path}`}\n              alt={title}\n            />\n          )}\n          <h2>\n            {title}({release_date.slice(0, 4)})\n          </h2>\n          <p>User score:{(vote_average * 10).toFixed() + '%'}</p>\n          <h3>Overview:</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          {genres.length === 0 ? (\n            <p>Not have Genres</p>\n          ) : (\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          )}\n          <Link to=\"cast\">cast</Link>\n          <Link to=\"reviews\">reviews</Link>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '42ab61f5920475fba7f6e6af12ec3589';\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesForRequest(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForIdAndParams(id, params) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/${params}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","data","setData","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieForId","then","poster_path","title","release_date","vote_average","overview","genres","to","current","src","alt","slice","toFixed","length","map","id","name","Suspense","fallback","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","error","fetchMoviesForRequest","query","fetchMovieForIdAndParams","params"],"sourceRoot":""}