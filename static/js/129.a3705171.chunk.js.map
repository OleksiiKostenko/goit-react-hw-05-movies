{"version":3,"file":"static/js/129.a3705171.chunk.js","mappings":"6KAmBA,IAfA,YAA+B,IAATA,EAAQ,EAARA,KACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACGF,QADH,IACGA,OADH,EACGA,EAAMG,KAAI,SAAAC,GAAM,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAAEC,KAAMP,GAAjD,SACGG,EAAOK,SAFHL,EAAOE,GADD,KAStB,C,4HC0CD,MAvDA,WACE,OAAsCI,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KAEMC,EAAgBJ,EAAYK,IAAI,SA6BtC,OA3BAC,EAAAA,EAAAA,YAAU,WACc,OAAlBF,IAGJG,EAAAA,EAAAA,IAAsBH,GAAeI,MAAK,SAAAnB,GAAI,OAC5CA,EAAKoB,OAAS,EACVN,EAAQd,GACRqB,MAAM,yCAHkC,GAM/C,GAAE,CAACP,KAkBF,gCACE,kBAAMQ,UAAU,mBAAmBC,SAjBlB,SAAAC,GACnBA,EAAIC,iBAEkB,OAAlBV,GAKJG,EAAAA,EAAAA,IAAsBH,GAAeI,MAAK,SAAAnB,GAAI,OAC5CA,EAAKoB,OAAS,EACVN,EAAQd,GACRqB,MAAM,yCAHkC,IAJ5CA,MAAM,mBAST,EAIG,WACE,mBAAQK,KAAK,SAASJ,UAAU,0BAAhC,UACE,iBAAMA,UAAU,iCAAhB,uBAGF,kBACEK,SAAU,SAAAH,GAAG,OAAIZ,EAAe,CAAEgB,MAAOJ,EAAIK,OAAOC,OAAvC,EACbC,KAAK,QACLT,UAAU,yBACVI,KAAK,OACLM,aAAa,MACbC,WAAS,EACTC,YAAY,gCAGflC,IAAQ,SAACmC,EAAA,EAAD,CAAYnC,KAAMA,MAGhC,EC9CD,MATA,WACE,OACE,4BACE,oCACA,SAAC,EAAD,MAGL,C,uKCRKoC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzC,cAEGG,EAFH,yBAKIA,EAASxC,KAAKyC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAAqCU,GAArC,gGAEoBW,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCT,IAHpD,cAEGY,EAFH,yBAKIA,EAASxC,KAAKyC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtC,GAA/B,gGAEoBiC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACA9B,EADA,oBACc+B,IAHlC,cAEGG,EAFH,yBAKIA,EAASxC,MALb,gCAOH0C,QAAQC,MAAR,MAPG,gFAWA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAAwCvC,EAAIwC,GAA5C,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACA9B,EADA,YACMwC,EADN,oBACwBT,IAH5C,cAEGG,EAFH,yBAKIA,EAASxC,MALb,gCAOH0C,QAAQC,MAAR,MAPG,gF","sources":["components/MoveisList/MoveisList.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","service/getRequest.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction MoveisList({ data }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data?.map(moveis => (\n        <li key={moveis.id}>\n          <Link to={`/movies/${moveis.id}`} state={{ from: location }}>\n            {moveis.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default MoveisList;\n\nMoveisList.propTypes = { data: PropTypes.array.isRequired };\n","import MoveisList from 'components/MoveisList/MoveisList';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesForRequest } from 'service/getRequest';\n\nfunction SearchMovies() {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const [data, setData] = useState([]);\n\n  const searchRequest = searchQuery.get('query');\n\n  useEffect(() => {\n    if (searchRequest === null) {\n      return;\n    }\n    fetchMoviesForRequest(searchRequest).then(data =>\n      data.length > 0\n        ? setData(data)\n        : alert(`We don't have any movie with this name`)\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setData]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (searchRequest === null) {\n      alert('Input movie name');\n      return;\n    }\n\n    fetchMoviesForRequest(searchRequest).then(data =>\n      data.length > 0\n        ? setData(data)\n        : alert(`We don't have any movie with this name`)\n    );\n  };\n\n  return (\n    <section>\n      <form className=\"{css.SearchForm}\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"{css.SearchForm_button}\">\n          <span className=\"{css.SearchForm_button__label}\">Search</span>\n        </button>\n\n        <input\n          onChange={evt => setSearchQuery({ query: evt.target.value })}\n          name=\"query\"\n          className=\"{css.SearchForm_input}\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n      {data && <MoveisList data={data} />}\n    </section>\n  );\n}\n\nexport default SearchMovies;\n","import SearchMovies from 'components/SearchMovies/SearchMovies';\nimport React from 'react';\n\nfunction Movies() {\n  return (\n    <div>\n      <h1>Movies</h1>\n      <SearchMovies></SearchMovies>\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '42ab61f5920475fba7f6e6af12ec3589';\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesForRequest(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForIdAndParams(id, params) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/${params}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["data","location","useLocation","map","moveis","to","id","state","from","title","useSearchParams","searchQuery","setSearchQuery","useState","setData","searchRequest","get","useEffect","fetchMoviesForRequest","then","length","alert","className","onSubmit","evt","preventDefault","type","onChange","query","target","value","name","autoComplete","autoFocus","placeholder","MoveisList","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","error","fetchMovieForId","fetchMovieForIdAndParams","params"],"sourceRoot":""}