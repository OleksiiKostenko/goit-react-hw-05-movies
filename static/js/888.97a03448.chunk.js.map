{"version":3,"file":"static/js/888.97a03448.chunk.js","mappings":"mOACA,EAA4B,gCAA5B,EAAyE,iCAAzE,EAAqH,+BAArH,EAA8J,8BAA9J,EAAyM,iCAAzM,EAAiP,2BAAjP,EAAyR,iCAAzR,EAAiU,2B,SCwEjU,MApEA,WAAyB,IAAD,IACdA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAExDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBZ,GAASa,MAAK,SAAAV,GAAI,OAAIC,EAAQD,EAAZ,GACnC,GAAE,CAACH,IAEJ,IAAQc,EACNX,EADMW,YAAaC,EACnBZ,EADmBY,MAAOC,EAC1Bb,EAD0Ba,aAAcC,EACxCd,EADwCc,aAAcC,EACtDf,EADsDe,SAAUC,EAChEhB,EADgEgB,OAGlE,OACE,gCACE,SAAC,KAAD,CAAMC,UAAWC,EAAeC,GAAIf,EAAiBgB,QAArD,qBAGCL,IACC,4BACE,iBAAKE,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACIP,GAGA,gBACEM,UAAWC,EACXG,IAAG,0CAAqCV,GACxCW,IAAKV,KALP,8CASJ,iBAAKK,UAAWC,EAAhB,WACE,0BACGN,EADH,MACaC,EAAaU,MAAM,EAAG,GADnC,SAGA,yCAAgC,GAAfT,GAAmBU,UAAY,QAChD,uCACA,cAAGP,UAAWC,EAAd,SAAyBH,KACzB,mCACmB,IAAlBC,EAAOS,QACN,4CAEA,eAAIR,UAAWC,EAAf,SACGF,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,aAOpB,iBAAKV,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAeC,GAAG,OAAnC,mBAGA,SAAC,KAAD,CAAMF,UAAWC,EAAeC,GAAG,UAAnC,yBAIF,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C,uKCrEKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzC,cAEGG,EAFH,yBAKIA,EAASnC,KAAKoC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCQ,IAHpD,cAEGL,EAFH,yBAKIA,EAASnC,KAAKoC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BkB,GAA/B,gGAEoBO,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAJ,EADA,oBACcK,IAHlC,cAEGG,EAFH,yBAKIA,EAASnC,MALb,gCAOHqC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAAwCd,EAAIe,GAA5C,gGAEoBR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAJ,EADA,YACMe,EADN,oBACwBV,IAH5C,cAEGG,EAFH,yBAKIA,EAASnC,MALb,gCAOHqC,QAAQC,MAAR,MAPG,gF","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","service/getRequest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back_link\":\"MovieDetails_back_link__aEZPa\",\"img_poster\":\"MovieDetails_img_poster__PO0Km\",\"img_wrap\":\"MovieDetails_img_wrap__FCyrw\",\"section\":\"MovieDetails_section__3J5A0\",\"info_wrapp\":\"MovieDetails_info_wrapp__xC8Zt\",\"text\":\"MovieDetails_text__uG5Tv\",\"link_wrapp\":\"MovieDetails_link_wrapp__eoHpo\",\"list\":\"MovieDetails_list__y5Rs9\"};","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieForId } from 'service/getRequest';\nimport css from './MovieDetails.module.css';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetchMovieForId(movieId).then(data => setData(data));\n  }, [movieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    data;\n\n  return (\n    <section>\n      <Link className={css.back_link} to={backLinkLocation.current}>\n        Go back\n      </Link>\n      {overview && (\n        <div>\n          <div className={css.section}>\n            <div className={css.img_wrap}>\n              {!poster_path ? (\n                <p>Not have Poster</p>\n              ) : (\n                <img\n                  className={css.img_poster}\n                  src={`https://image.tmdb.org/t/p/w342/${poster_path}`}\n                  alt={title}\n                />\n              )}\n            </div>\n            <div className={css.info_wrapp}>\n              <h2>\n                {title} ( {release_date.slice(0, 4)} )\n              </h2>\n              <p>User score: {(vote_average * 10).toFixed() + '%'}</p>\n              <h3>Overview:</h3>\n              <p className={css.text}>{overview}</p>\n              <h4>Genres</h4>\n              {genres.length === 0 ? (\n                <p>Not have Genres</p>\n              ) : (\n                <ul className={css.list}>\n                  {genres.map(({ id, name }) => (\n                    <li key={id}>{name}</li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n          <div className={css.link_wrapp}>\n            <Link className={css.back_link} to=\"cast\">\n              Cast\n            </Link>\n            <Link className={css.back_link} to=\"reviews\">\n              Reviews\n            </Link>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '42ab61f5920475fba7f6e6af12ec3589';\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesForRequest(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieForIdAndParams(id, params) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/${params}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","data","setData","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieForId","then","poster_path","title","release_date","vote_average","overview","genres","className","css","to","current","src","alt","slice","toFixed","length","map","id","name","Suspense","fallback","BASE_URL","API_KEY","fetchTrending","axios","response","results","console","error","fetchMoviesForRequest","query","fetchMovieForIdAndParams","params"],"sourceRoot":""}